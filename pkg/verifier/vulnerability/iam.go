// Copyright 2020  Portieris Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package vulnerability

import (
	"net/http"
	"sync"

	ibmcloud "github.com/IBM/go-sdk-core/v4/core"
)

type authenticatorCache struct {
	Map sync.Map
}

var authenticators *authenticatorCache
var once sync.Once

func getAuthenticatorCache() *authenticatorCache {
	if authenticators == nil {
		once.Do(
			func() {
				authenticators = &authenticatorCache{}
			})
	}
	return authenticators
}

type requestAuthenticator interface {
	Authenticate(request *http.Request) error
}

type authenticatorFactoryInterface interface {
	NewAuthenticator(string) (requestAuthenticator, error)
}

type authenticatorFactory struct{}

func (a authenticatorFactory) NewAuthenticator(apiKey string) (requestAuthenticator, error) {
	return ibmcloud.NewIamAuthenticator(apiKey, ibmcloud.DEFAULT_IAM_URL, "", "", false, nil)
}
