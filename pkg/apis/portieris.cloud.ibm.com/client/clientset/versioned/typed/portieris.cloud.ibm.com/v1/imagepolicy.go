/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"time"

	scheme "github.com/IBM/portieris/pkg/apis/portieris.cloud.ibm.com/client/clientset/versioned/scheme"
	portieriscloudibmcomv1 "github.com/IBM/portieris/pkg/apis/portieris.cloud.ibm.com/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// ImagePoliciesGetter has a method to return a ImagePolicyInterface.
// A group's client should implement this interface.
type ImagePoliciesGetter interface {
	ImagePolicies(namespace string) ImagePolicyInterface
}

// ImagePolicyInterface has methods to work with ImagePolicy resources.
type ImagePolicyInterface interface {
	Get(name string, options v1.GetOptions) (*portieriscloudibmcomv1.ImagePolicy, error)
	List(opts v1.ListOptions) (*portieriscloudibmcomv1.ImagePolicyList, error)
	ImagePolicyExpansion
}

// imagePolicies implements ImagePolicyInterface
type imagePolicies struct {
	client rest.Interface
	ns     string
}

// newImagePolicies returns a ImagePolicies
func newImagePolicies(c *PortierisV1Client, namespace string) *imagePolicies {
	return &imagePolicies{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Get takes name of the imagePolicy, and returns the corresponding imagePolicy object, and an error if there is any.
func (c *imagePolicies) Get(name string, options v1.GetOptions) (result *portieriscloudibmcomv1.ImagePolicy, err error) {
	result = &portieriscloudibmcomv1.ImagePolicy{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("imagepolicies").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of ImagePolicies that match those selectors.
func (c *imagePolicies) List(opts v1.ListOptions) (result *portieriscloudibmcomv1.ImagePolicyList, err error) {
	var timeout time.Duration
	if opts.TimeoutSeconds != nil {
		timeout = time.Duration(*opts.TimeoutSeconds) * time.Second
	}
	result = &portieriscloudibmcomv1.ImagePolicyList{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("imagepolicies").
		VersionedParams(&opts, scheme.ParameterCodec).
		Timeout(timeout).
		Do().
		Into(result)
	return
}
