/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"time"

	scheme "github.com/IBM/portieris/pkg/apis/portieris.cloud.ibm.com/client/clientset/versioned/scheme"
	portieriscloudibmcomv1 "github.com/IBM/portieris/pkg/apis/portieris.cloud.ibm.com/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// ClusterImagePoliciesGetter has a method to return a ClusterImagePolicyInterface.
// A group's client should implement this interface.
type ClusterImagePoliciesGetter interface {
	ClusterImagePolicies() ClusterImagePolicyInterface
}

// ClusterImagePolicyInterface has methods to work with ClusterImagePolicy resources.
type ClusterImagePolicyInterface interface {
	Get(name string, options v1.GetOptions) (*portieriscloudibmcomv1.ClusterImagePolicy, error)
	List(opts v1.ListOptions) (*portieriscloudibmcomv1.ClusterImagePolicyList, error)
	ClusterImagePolicyExpansion
}

// clusterImagePolicies implements ClusterImagePolicyInterface
type clusterImagePolicies struct {
	client rest.Interface
}

// newClusterImagePolicies returns a ClusterImagePolicies
func newClusterImagePolicies(c *PortierisV1Client) *clusterImagePolicies {
	return &clusterImagePolicies{
		client: c.RESTClient(),
	}
}

// Get takes name of the clusterImagePolicy, and returns the corresponding clusterImagePolicy object, and an error if there is any.
func (c *clusterImagePolicies) Get(name string, options v1.GetOptions) (result *portieriscloudibmcomv1.ClusterImagePolicy, err error) {
	result = &portieriscloudibmcomv1.ClusterImagePolicy{}
	err = c.client.Get().
		Resource("clusterimagepolicies").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of ClusterImagePolicies that match those selectors.
func (c *clusterImagePolicies) List(opts v1.ListOptions) (result *portieriscloudibmcomv1.ClusterImagePolicyList, err error) {
	var timeout time.Duration
	if opts.TimeoutSeconds != nil {
		timeout = time.Duration(*opts.TimeoutSeconds) * time.Second
	}
	result = &portieriscloudibmcomv1.ClusterImagePolicyList{}
	err = c.client.Get().
		Resource("clusterimagepolicies").
		VersionedParams(&opts, scheme.ParameterCodec).
		Timeout(timeout).
		Do().
		Into(result)
	return
}
