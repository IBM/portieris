# an inoperative webhook, establishes the object in the helm manifest such that it is uninstalled on chart delete
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: image-admission-config
  annotations:
  {{ if .Values.UseCertManager }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/portieris-certs
  {{ end }}
  labels:
    app: {{ template "portieris.name" . }}
    chart: {{ template "portieris.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
webhooks:
  - name: trust.hooks.securityenforcement.admission.cloud.ibm.com
    clientConfig:
      service:
        name: {{ template "portieris.name" . }}
        namespace: {{ .Release.Namespace }}
        path: "/admit"
      {{ if not .Values.UseCertManager }}
      {{ if .Values.UseGeneratedCerts.enabled }}
      caBundle: {{ required "A valid .Values.UseGeneratedCerts.caCert entry required!" .Values.UseGeneratedCerts.caCert | b64enc | quote }}
      {{ else }}
      caBundle: {{ .Files.Get "certs/ca.crt" | b64enc }}
      {{ end }}
      {{ end }}
    rules: []
    sideEffects: None
    admissionReviewVersions: ["v1"]
---
# webhook replaces the inoperative one, after the service is installed
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: image-admission-config
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-rollback
  {{ if .Values.UseCertManager }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/portieris-certs
  {{ end }}
  labels:
    app: {{ template "portieris.name" . }}
    chart: {{ template "portieris.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
webhooks:
  - name: trust.hooks.securityenforcement.admission.cloud.ibm.com
    clientConfig:
      service:
        name: {{ template "portieris.name" . }}
        namespace: {{ .Release.Namespace }}
        path: "/admit"
      {{ if not .Values.UseCertManager }}
      {{ if .Values.UseGeneratedCerts.enabled }}
      caBundle: {{ required "A valid .Values.UseGeneratedCerts.caCert entry required!" .Values.UseGeneratedCerts.caCert | b64enc | quote }}
      {{ else }}
      caBundle: {{ .Files.Get "certs/ca.crt" | b64enc }}
      {{ end }}
      {{ end }}
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods", "deployments", "replicationcontrollers", "replicasets", "daemonsets", "statefulsets", "jobs", "cronjobs"]
    failurePolicy: {{ .Values.webHooks.failurePolicy }}
    sideEffects: None
    admissionReviewVersions: ["v1"]
    {{ if .Values.AllowAdmissionSkip }}
    namespaceSelector:
      matchExpressions:
      - key: securityenforcement.admission.cloud.ibm.com/namespace
        operator: NotIn
        values:
        - skip
    {{ end }}
    {{ if .Values.ObjectSelectorAdmissionSkip }}
    objectSelector:
{{ toYaml .Values.ObjectSelectorAdmissionSkip | indent 6 }}
    {{ end }}