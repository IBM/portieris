apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "portieris.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "portieris.name" . }}
    chart: {{ template "portieris.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "portieris.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "portieris.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: portieris
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.host | default "docker.io/ibmcom"  }}/{{ .Values.image.image }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
          - name: portieris-certs
            readOnly: true
            mountPath: "/etc/certs"
          livenessProbe:
            httpGet:
              port: 8000
              path: "/health/liveness"
              scheme: HTTPS
          readinessProbe:
            httpGet:
              port: 8000
              path: "/health/readiness"
              scheme: HTTPS
          env:
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      securityContext:
        runAsUser: 1000060001
      volumes:
      - name: portieris-certs
        secret:
          secretName: portieris-certs
